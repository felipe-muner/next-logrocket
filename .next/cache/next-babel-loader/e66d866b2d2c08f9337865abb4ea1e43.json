{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/fmuner/my_projects_muner/next-react/logrocket-next/pages/show/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\n\nfunction Show(_ref) {\n  var show = _ref.show;\n  return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 10\n    }\n  }, \"I am a show\");\n}\n\n_c = Show;\n\nShow.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var res, data, shows;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.tvmaze.com/search/shows/\".concat(id));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            shows = {\n              shows: data.map(function (entry) {\n                return entry.show;\n              })\n            };\n            console.log(\"rendering...\", shows);\n            return _context.abrupt(\"return\", shows);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Show;\n\nvar _c;\n\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"sources":["/Users/fmuner/my_projects_muner/next-react/logrocket-next/pages/show/[id].js"],"names":["Link","Show","show","getInitialProps","context","fetch","id","res","json","data","shows","map","entry","console","log"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAEA,SAASC,IAAT,OAAwB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACtB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;KAFQD,I;;AAITA,IAAI,CAACE,eAAL;AAAA,uEAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHC,KAAK,+CAAwCC,EAAxC,EADF;;AAAA;AACfC,YAAAA,GADe;AAAA;AAAA,mBAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfC,YAAAA,IAFe;AAGfC,YAAAA,KAHe,GAGP;AAAEA,cAAAA,KAAK,EAAED,IAAI,CAACE,GAAL,CAAS,UAACC,KAAD;AAAA,uBAAWA,KAAK,CAACV,IAAjB;AAAA,eAAT;AAAT,aAHO;AAIrBW,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,KAA5B;AAJqB,6CAMdA,KANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AASA,eAAeT,IAAf","sourcesContent":["import Link from \"next/link\";\n\nfunction Show({ show }) {\n  return <p>I am a show</p>;\n}\n\nShow.getInitialProps = async function (context) {\n  const res = await fetch(`https://api.tvmaze.com/search/shows/${id}`);\n  const data = await res.json();\n  const shows = { shows: data.map((entry) => entry.show) };\n  console.log(\"rendering...\", shows);\n\n  return shows;\n};\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}