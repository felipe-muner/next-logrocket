{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/fmuner/my_projects_muner/next-react/logrocket-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nexport default function Index(_ref) {\n  var _this = this;\n\n  var shows = _ref.shows;\n  console.log(\"shows:\", shows); // shows.map((show) => console.log(show));\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"home\"), __jsx(Link, {\n    href: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"about\")), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Series\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"/show/[id]\",\n      as: \"/show/\".concat(show.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }, show.name)));\n  })));\n}\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data, shows;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://api.tvmaze.com/search/shows?q=sherlock\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          shows = {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          };\n          console.log(\"rendering...\", shows);\n          return _context.abrupt(\"return\", shows);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/fmuner/my_projects_muner/next-react/logrocket-next/pages/index.js"],"names":["Link","fetch","Index","shows","console","log","map","show","id","name","getInitialProps","res","json","data","entry"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,KAAT,OAA0B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB,EADuC,CAEvC;;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD;AAAA,WACT;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,EAAE,kBAAWD,IAAI,CAACC,EAAhB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADS;AAAA,GAAV,CADH,CAPF,CADF;AAmBD;KAtBuBP,K;AAwBxBA,KAAK,CAACQ,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJT,KAAK,CAAC,gDAAD,CADD;;AAAA;AAChBU,UAAAA,GADgB;AAAA;AAAA,iBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAGhBV,UAAAA,KAHgB,GAGR;AAAEA,YAAAA,KAAK,EAAEU,IAAI,CAACP,GAAL,CAAS,UAACQ,KAAD;AAAA,qBAAWA,KAAK,CAACP,IAAjB;AAAA,aAAT;AAAT,WAHQ;AAItBH,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;AAJsB,2CAMfA,KANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nexport default function Index({ shows }) {\n  console.log(\"shows:\", shows);\n  // shows.map((show) => console.log(show));\n  return (\n    <>\n      <h2>home</h2>\n      <Link href=\"/about\">\n        <a>about</a>\n      </Link>\n\n      <h1>Series</h1>\n      <ul>\n        {shows.map((show) => (\n          <li key={show.id}>\n            <Link href=\"/show/[id]\" as={`/show/${show.id}`}>\n              <a>{show.name}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nIndex.getInitialProps = async function () {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=sherlock\");\n  const data = await res.json();\n  const shows = { shows: data.map((entry) => entry.show) };\n  console.log(\"rendering...\", shows);\n\n  return shows;\n};\n"]},"metadata":{},"sourceType":"module"}