{"ast":null,"code":"var _jsxFileName = \"/Users/fmuner/my_projects_muner/next-react/logrocket-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nexport default function Index(props) {\n  console.log(\"shows:\", shows);\n  debugger; // shows.map((show) => console.log(show));\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"home\"), __jsx(Link, {\n    href: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"about\")), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Series\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}\n\nIndex.getInitialProps = async function () {\n  const res = await fetch(\"http://api.tvmaze.com/search/shows?q=sherlock\");\n  const data = await res.json();\n  const shows = {\n    shows: data.map(entry => entry.show)\n  };\n  console.log(\"rendering...\", shows);\n  return {\n    shows\n  };\n};","map":{"version":3,"sources":["/Users/fmuner/my_projects_muner/next-react/logrocket-next/pages/index.js"],"names":["Link","fetch","Index","props","console","log","shows","getInitialProps","res","data","json","map","entry","show"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,KAAtB;AACA,WAFmC,CAGnC;;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAmBD;;AAEDJ,KAAK,CAACK,eAAN,GAAwB,kBAAkB;AACxC,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAAC,+CAAD,CAAvB;AACA,QAAMQ,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,QAAMJ,KAAK,GAAG;AAAEA,IAAAA,KAAK,EAAEG,IAAI,CAACE,GAAL,CAAUC,KAAD,IAAWA,KAAK,CAACC,IAA1B;AAAT,GAAd;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,KAA5B;AAEA,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CATD","sourcesContent":["import Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nexport default function Index(props) {\n  console.log(\"shows:\", shows);\n  debugger;\n  // shows.map((show) => console.log(show));\n  return (\n    <>\n      <h2>home</h2>\n      <Link href=\"/about\">\n        <a>about</a>\n      </Link>\n\n      <h1>Series</h1>\n      <ul>\n        {/* {shows.map((show) => (\n          <li key={show.id}>\n            <Link href=\"/show/[id]\" as={`/show/${show.id}`}>\n              <a>{show.name}</a>\n            </Link>\n          </li>\n        ))} */}\n      </ul>\n    </>\n  );\n}\n\nIndex.getInitialProps = async function () {\n  const res = await fetch(\"http://api.tvmaze.com/search/shows?q=sherlock\");\n  const data = await res.json();\n  const shows = { shows: data.map((entry) => entry.show) };\n  console.log(\"rendering...\", shows);\n\n  return {\n    shows,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}